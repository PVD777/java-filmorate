DROP table IF EXISTS "FILMS", "USERS", "LIKES", "FILM_GENRE", "MPA_RATING",
    "FRIENDS", "GENRE", "DIRECTOR", "REVIEWS_LIKES", "REVIEWS", "FILM_DIRECTOR", "EVENT";

create table IF NOT EXISTS "USERS"
(
    user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login varchar(40) NOT NULL,
    name varchar(255),
    email varchar(255),
    birthday date
);

create table IF NOT EXISTS "MPA_RATING"
(
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    mpaName varchar(10)
);

create table IF NOT EXISTS "FILMS"
(
    film_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    description varchar(255) NOT NULL,
    duration int,
    release date,
    mpa_id int REFERENCES "MPA_RATING" (mpa_id)
);

create table IF NOT EXISTS "GENRE"
(
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

create table IF NOT EXISTS "FILM_GENRE"
(
    film_id int references "FILMS"(film_id),
    genre_id int REFERENCES "GENRE"(genre_id),
    primary key (film_id, genre_id)
);

create table IF NOT EXISTS "LIKES"
(
    user_id int ,
    film_id int,
    primary key (user_id, film_id)
);

create table IF NOT EXISTS "FRIENDS"
(
    user_id int REFERENCES "USERS"(user_id),
    friend_id int REFERENCES "USERS"(user_id),
    friend_status boolean default false,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS "DIRECTOR"
(
    director_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

CREATE TABLE IF NOT EXISTS "FILM_DIRECTOR"
(
    film_id int REFERENCES "FILMS" (film_id) ON DELETE CASCADE,
    director_id int REFERENCES "DIRECTOR" (director_id) ON DELETE CASCADE
);

create table IF NOT EXISTS "REVIEWS"
(
    review_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content varchar,
    is_positive boolean,
    user_id int REFERENCES "USERS"(user_id),
    film_id int REFERENCES "FILMS"(film_id)
);

create table IF NOT EXISTS "REVIEWS_LIKES" (
    user_id int REFERENCES "USERS"(user_id),
    review_id int REFERENCES "REVIEWS"(review_id),
    is_positive boolean,
    PRIMARY KEY (user_id, review_id)
)

CREATE TABLE IF NOT EXISTS "EVENT"
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id int REFERENCES "USERS" (user_id) ON DELETE CASCADE,
    creation_date bigint,
    event_type varchar,
    operation varchar,
    entity_id int
);





